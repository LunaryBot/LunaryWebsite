<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="/css/menu.css" />
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet" href="/css/select-menu.css" />
    <link rel="stylesheet" href="/css/toggle.css" />

    <link rel="stylesheet" href="/css/guild.css" />
    
    <script src="/js/jquery.js"></script>
    <script src="/js/navigator_userAgent.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.15.4/css/all.css" />
    <title>Document</title>
</head>
<body>
    <%- include("../../templates/menu_guild") %> 

    <div class="content">
        <div class="page-title">
            <br>
            <h2><strong><i class="fas fa-hammer"></i> MODERAÇÃO</strong></h2>
        </div>

        <br>
        <br>
        <div class="card">
            <div class="card-title">
                <h3><strong><i class="fas fa-cog"></i> GERAL</strong></h3>
            </div>
            <div class="card-content">
                <div class="check-radio">
                    <input type="checkbox" name="mandatory_reason" id="mandatory_reason" data-send-on-save /><label style="margin-left: 1%; font-size: 18px"><strong>Tornar motivo para punições obrigatório</strong></label>
                    <p>Permitir que uma punição usando o bot(Lunar) só seja efetuada com um motivo especificado.<br>Essa opção só ira ser aplicada para usuários que não possuem um cargo com a permissão <code>Punir sem motivo</code>.</p>
                </div>
                <hr>
                <br>
                <div class="check-radio">
                    <input type="checkbox" name="log_unban" id="log_unban" data-send-on-save /><label style="margin-left: 1%; font-size: 18px"><strong>Registrar evento Unban</strong></label>
                    <p>Registrar no canal de modlogs quando um banimento for retirado.<br>Para mostrar o motivo e o autor, você precisa dar ao bot permissão de <code>Ver registro de autoria</code>.</p>
                </div>
                <hr>
                <br>
                <div class="check-radio">
                    <input type="checkbox" name="log_unmute" id="log_unban" data-send-on-save /><label style="margin-left: 1%; font-size: 18px"><strong>Registrar evento Unmute</strong></label>
                    <p>Registrar no canal de punições quando um silenciamento for retirado.</p>
                </div>
                <hr>
                <br>
                <div class="check-radio">
                    <input type="checkbox" name="log_events" id="log_events" data-send-on-save /><label style="margin-left: 1%; font-size: 18px"><strong>Eventos de banimento de log não feitos através do bot(Lunar)</strong></label>
                    <p>Registrar no canal de modlogs e punições quando um banimento for aplicado e não tenha sido feito pelo bot(Lunar).<br>Para mostrar o motivo e o autor, você precisa dar ao bot permissão de <code>Ver registro de autoria</code>.</p>
                </div>
            </div>
        </div>

        <br>

        <div class="card">
            <div class="card-title">
                <h3><strong><i class="fas fa-volume-slash"></i> MUTE</strong></h3>
            </div>

            <div class="card-content">
                <label><strong>Cargo de mute:</strong></label>
                <p style="margin-left: 3%; color: rgb(184, 184, 184)">Cargo que um usuário irá receber enquanto estiver mutado.<br>Se não estiver nenhum cargo selecionado o bot(Lunar) irá criar um.</p>
                <div class="select-wrapper" type="selectmenu" data-send-on-save>
                    <div class="select" id="muterole">
                        <div class="select__trigger"><p>Selecionar Cargo</p>
                        </div>
                        <p class="select-menu-search"><input type="text" value="" autocomplete="off" placeholder="Nome/ID" name="search"><i class="icon fas fa-search"></i></p>
                        <div class="custom-options close" id="co-muterole">
                            <span class="custom-option selected" data-value="none" name="Selecionar Cargo">Nenhum</span>
                            <% guild.roles.filter(x => !x.managed && x.id != guild.id).sort((a, b) => b.rawPosition - a.rawPosition).map(function(role) { %> 
                                <span class="custom-option" style="color: #<%= (role.color || 16777215).toString(16) %>;" data-value="<%= role.id %>"> <p><%= role.name %></p> </span>    
                            <% }) %>
                        </div>
                    </div>
                </div>
                <hr>
                <br>
                <div class="check-radio">
                    <input type="checkbox" name="remove_roles_in_mute" id="remove_roles_in_mute" data-send-on-save /><label style="margin-left: 1%; font-size: 18px"><strong>Remover cargos</strong></label>
                    <p>Remover os cargos do usuário durante o período de silenciamento e devolve-os quando o silenciamento terminar.</p>
                </div>
            </div>
        </div>

        <br>

        <div class="card">
            <div class="card-title">
                <h3><strong><i class="fas fa-hashtag"></i> Canais de Logs</strong></h3>
            </div>

            <div class="card-content">
                <label><strong>Canal de modlogs:</strong></label>
                <div class="select-wrapper" type="selectmenu" data-send-on-save>
                    <div class="select" id="chat_modlogs">
                        <div class="select__trigger"><p>Selecionar Canal</p>
                        </div>
                        <p class="select-menu-search"><input type="text" value="" autocomplete="off" placeholder="Nome/ID" name="search"><i class="icon fas fa-search"></i></p>
                        <div class="custom-options close" id="co-chat_modlogs">
                            <span class="custom-option selected" data-value="none" name="Selecionar Cargo">Nenhum</span>
                            <% guild.channels.filter(x => ["GUILD_TEXT", "GUILD_NEWS"].includes(x.type)).sort((a, b) => a.rawPosition - b.rawPosition).map(function(channel) { %> 
                                <span class="custom-option" data-value="<%= channel.id %>"> <p><%= channel.name %></p> </span>    
                            <% }) %>
                        </div>
                    </div>
                </div>
                <p style="margin-left: 3%; color: rgb(184, 184, 184)">Canal onde será enviado as mensagem de modlogs. <a href="https://ptb.discord.com/channels/869916717122469898/872881703520194621/880267224332513380"><code>Exemplo</code></a><br><code style="color: #00ff00">Mostra autor, usuário, motivo, id e link para log punição</code>, <br><code style="color: red;">Não mostra o gif de punição</code></p>
                <hr>
                <br>
                <label><strong>Canal de punições:</strong></label>
                <div class="select-wrapper" type="selectmenu" data-send-on-save>
                    <div class="select" id="chat_punish">
                        <div class="select__trigger"><p>Selecionar Canal</p>
                        </div>
                        <p class="select-menu-search"><input type="text" value="" autocomplete="off" placeholder="Nome/ID" name="search"><i class="icon fas fa-search"></i></p>
                        <div class="custom-options close" id="co-chat_punish">
                            <span class="custom-option selected" data-value="none" name="Selecionar Cargo">Nenhum</span>
                            <% guild.channels.filter(x => ["GUILD_TEXT", "GUILD_NEWS"].includes(x.type)).sort((a, b) => a.rawPosition - b.rawPosition).map(function(channel) { %> 
                                <span class="custom-option" data-value="<%= channel.id %>"> <p><%= channel.name %></p> </span>    
                            <% }) %>
                        </div>
                    </div>
                </div>
                <p style="margin-left: 3%; color: rgb(184, 184, 184)">Canal onde será enviado as mensagem de punições. <a href="https://ptb.discord.com/channels/869916717122469898/872881703520194621/880267224332513380"><code>Exemplo</code></a><br><code style="color: #00ff00">Mostra autor, usuário, motivo, e gif punição</code>, <br><code style="color: red;">Não mostra id e link de log da punição.</code></p>
            </div>
        </div>
        <div class="card-save" id="card-save"><strong style="color: rgb(184, 184, 184)">Salvar as alterações feitas</strong> <button class="bnt-save" onclick="prepareSave()"><strong>Salvar</strong></button></div>
    </div>


    <script defer>
        $("[data-send-on-save]").map(function() {
            const a = $(this)

            if(a.attr("type") == "checkbox") {
                a.click(function() {
                    const cardsave = $("#card-save")
                    if(cardsave) cardsave.addClass("ok")
                })
            }
        })
        function prepareSave() {
            const data_saves = $("[data-send-on-save]")

            const save = data_saves.map(function(x) {
                const a = $(this)
                const type = a.attr("type")
                
                if(type == "selectmenu") {
                    const m = a.find("div.select div.custom-options span.custom-option.selected")[0]
                    const select = $(m)
                    if(select) {
                        const value = $(select).attr("data-value")

                        return {
                            type: "selectmenu",
                            id: a.find("div.select").attr("id"),
                            value: value
                        }
                    }
                }

                if(type == "checkbox") {
                    return {
                        type: "checkbox",
                        id: a.attr("id"),
                        value: a.is(':checked')
                    }
                }
            }).filter(x => x)

            let json = {
                type: "moderation",
                configs: {}
            }

            const _ = [ ...save.prevObject ]
            _.map(x => json.configs[x.id] = x.value)

            console.log(json)
            console.log("...")
            axios.post(`${window.location.origin}/api/guild/<%= guild.id %>/save`, json)
        }
        
        function sendJsonToServer(json) {
            
            
            axios.post(`${window.location.origin}/api/guild/<%= guild.id %>/save`, json)
        }
    </script>

    <%- include("../../templates/usertoJSON") %> 
    <%- include("../../templates/guildtoJSON") %> 

    <script type="text/javascript" src="/js/menu.js"></script>
    <script type="text/javascript" src="/js/select-menu.js"></script>
    <script type="text/javascript" src="/js/Bitfield.js"></script>
    <script type="text/javascript" src="/js/GuildConfigs.js"></script>
</body>
</html>